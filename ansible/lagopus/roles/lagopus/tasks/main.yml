## setup Lagopus

- name: Install packages for Lagopus
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items:
    - git
    - build-essential
    - libexpat1-dev
    - libgmp-dev
    - libssl-dev
    - libpcap-dev
    - byacc
    - flex
    - python-dev
    - python-pastedeploy
    - python-paste
    - python-twisted
  environment: "{{ proxy_env }}"
  become: yes

- name: Clone Lagopus from Github
  git:
    repo: "{{ lagopus.repository }}"
    version: "{{ lagopus.version }}"
    dest: "{{ lagopus.src_dir }}"
  environment: "{{ proxy_env }}"
  register: res
  become: yes
  changed_when: res.before != res.after
  when: lagopus.compile == true

- name: configure lagopus
  shell:
    ./configure {{ lagopus.configure_option }}
    chdir={{ lagopus.src_dir }}
  become: yes
  register: configure_lagopus
  changed_when: no
  when: lagopus.compile == true

- name: make lagopus
  shell:
    make {{ lagopus.make_option }}
    chdir={{ lagopus.src_dir }}
  become: yes
  changed_when: no
  when: lagopus.compile == true

- name: make install lagopus
  shell:
    make install
    chdir={{ lagopus.src_dir }}
  become: yes
  changed_when: no
  when: lagopus.compile == true

- name: lagopus config file directory
  file: path=/usr/local/etc/lagopus state=directory owner=root group=root mode=0755
  become: yes


## setup Hugepages

- name: Setup the number of hugepages
  shell: >
    cat /sys/devices/system/node/node{{ item.id }}/hugepages/hugepages-{{ hugepage.size }}/nr_hugepages
    && echo {{ item.number_of_pages }} > /sys/devices/system/node/node{{ item.id }}/hugepages/hugepages-{{ hugepage.size }}/nr_hugepages
  with_items: "{{ hugepage.nodes }}"
  register: result
  become: yes
  changed_when: result.stdout != "{{ item.number_of_pages }}"
  when: hugepage.setup == true and hugepage.grub_update != true

- name: Setup grub
  lineinfile:
    dest: /etc/default/grub
    line: GRUB_CMDLINE_LINUX_DEFAULT="default_hugepagesz={{ hugepage.size }} hugepagesz={{ hugepage.size }} hugepages={{ hugepage.total }}"
    state: present
    backrefs: yes
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=.*'
  register: update_grub
  become: yes
  when: hugepage.setup == true and hugepage.grub_update == true

- file: path=/mnt/huge state=directory owner=root group=root mode=0755 recurse=yes
  become: yes
- name: Mount hugepage
  mount: name=/mnt/huge fstype=hugetlbfs src=nodev state=present
  become: yes

- name: update-grub
  shell:
    update-grub
  become: yes
  when: update_grub|changed

- name: restart machine
  shell: reboot "Ansible rebooting system" &
  become: yes
  when: update_grub|changed

- name: Wait for SSH port down
  local_action: wait_for host={{ inventory_hostname }} port=22 state=stopped
  when: update_grub|changed

- name: Wait for SSH port up
  local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=30
  when: update_grub|changed




## setup DPDK

- include: dpdk.yml


## make lagopus.dsl

- name: make lagopus.dsl
  template:
    src: lagopus.dsl.j2
    dest: /usr/local/etc/lagopus/lagopus.dsl
  become: yes

## make run script

- name: make script to run lagopus
  template:
    src: run_lagopus.sh.j2
    dest: "{{ lagopus.run_script }}"
  when: lagopus.run_script is defined
